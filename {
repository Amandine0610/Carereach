// Temporary in-app appointment creation logic
app.post('/appointments/submit-appointment', (req, res) => {
    const { name, email, phone, appointment_date, appointment_time, department } = req.body;

    // Simulate database logic
    console.log(req.body);

    res.status(201).json({
        message: 'Appointment created successfully!',
        appointment: {
            name,
            email,
            phone,
            appointment_date,
            appointment_time,
            department,
        },
    });
});
// Fetch all appointments
app.get('/appointments', async (req, res) => {
    try {
        const appointments = await db.query('SELECT * FROM appointments'); // Adjust query as per your database
        res.json(appointments.rows); // Assuming you're using PostgreSQL
    } catch (error) {
        console.error('Error fetching appointments:', error);
        res.status(500).send('Error retrieving appointments');
    }
});
// Update an appointment (e.g., mark as completed)
app.put('/appointments/:id', async (req, res) => {
    try {
        const appointment = await Appointment.findByPk(req.params.id);
        if (!appointment) {
            return res.status(404).send('Appointment not found');
        }

        const updatedAppointment = await appointment.update(req.body);
        res.json(updatedAppointment);
    } catch (error) {
        console.error(error);
        res.status(500).send('Error updating appointment');
    }
});

// Delete an appointment
app.delete('/appointments/:id', async (req, res) => {
    try {
        const appointment = await Appointment.findByPk(req.params.id);
        if (!appointment) {
            return res.status(404).send('Appointment not found');
        }

        await appointment.destroy();
        res.send('Appointment deleted successfully');
    } catch (error) {
        console.error(error);
        res.status(500).send('Error deleting appointment');
    }
});